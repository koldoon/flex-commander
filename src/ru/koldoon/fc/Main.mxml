<?xml version="1.0"?>
<s:Application
    xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:impl="ru.koldoon.fc.c.panel.impl.*" xmlns:impl2="ru.koldoon.fc.c.popups.impl.*"
    xmlns:debug="ru.koldoon.fc.c.debug.*"

    backgroundColor="#011130" applicationDPI="320" frameRate="1000" width="100%" height="100%"
    activate="onActivate()" deactivate="deactivateHandler(event)"
    applicationComplete="applicationCompleteHandler(event)">

    <fx:Declarations>
        <debug:SOSLoggingTarget/>
    </fx:Declarations>


    <fx:Style source="/ru/koldoon/fc/resources/styles/typo.css"/>
    <fx:Style source="/ru/koldoon/fc/resources/styles/text-styles.css"/>
    <fx:Style source="/ru/koldoon/fc/resources/styles/text-sizes.css"/>
    <fx:Style source="/ru/koldoon/fc/resources/styles/palette.css"/>
    <fx:Style source="/ru/koldoon/fc/resources/styles/components.css"/>

    <impl:FilesPanel
        id="leftPanel" position="left"
        left="0" bottom="85" top="20" width="{width / 2 - 10}"/>

    <impl:FilesPanel
        id="rightPanel" position="right"
        right="0" bottom="85" top="20" width="{width / 2 - 10}"/>

    <!--
    <s:TextInput
        bottom="85" height="55" left="0" right="0"
        skinClass="ru.koldoon.fc.resources.skins.input.TextInputBorderedSkin"
        tabFocusEnabled="false"/>
    -->

    <s:List
        id="functionKeyList"
        bottom="15" left="0" right="0" minHeight="0"
        itemRenderer="ru.koldoon.fc.c.fn.FunctionKeyRenderer"
        skinClass="ru.koldoon.fc.resources.skins.list.ListTransparentSkin"
        preventSelection="true" focusEnabled="false"
        click="functionKeyList_clickHandler(event)">

        <s:layout>
            <s:TileLayout
                requestedRowCount="1" rowHeight="55" requestedColumnCount="10"
                horizontalAlign="justify" columnAlign="justifyUsingWidth"
                paddingRight="30" horizontalGap="20"/>
        </s:layout>

        <s:dataProvider>
            <s:ArrayCollection>
                <fx:String>Help</fx:String>
                <fx:String>-</fx:String>
                <fx:String>-</fx:String>
                <fx:String>-</fx:String>
                <fx:String>Copy</fx:String>
                <fx:String>Move</fx:String>
                <fx:String>MkDir</fx:String>
                <fx:String>Delete</fx:String>
                <fx:String>-</fx:String>
                <fx:String>-</fx:String>
            </s:ArrayCollection>
        </s:dataProvider>

    </s:List>


    <impl2:PopupManager
        id="popupManager"
        left="0" right="0" top="0" bottom="0"/>


    <fx:Script><![CDATA[
        import mx.controls.ToolTip;
        import mx.core.UIComponent;
        import mx.events.FlexEvent;

        import ru.koldoon.fc.m.app.impl.ApplicationImpl;
        import ru.koldoon.fc.m.app.impl.commands.env.StartupCommand;

        private var proposedFocusObject:UIComponent;

        /**
         * Main Application Model and Context
         */
        private var app:ApplicationImpl;


        private function deactivateHandler(event:Event):void {
            trace("deactivateHandler");
        }


        /**
         * Focus manager issues workaround:
         * Set focused component manually.
         * Sometime application looses on switch from/to it
         */
        private function onActivate():void {
            trace("Activate");

            if (!app) {
                // application is not ready yet
                return;
            }

            if (popupManager.getPopupsVisible().length > 0) {
                popupManager.setFocus();
            }
            else {
                UIComponent(app.getActivePanel()).setFocus();
            }
        }


        private function applicationCompleteHandler(event:FlexEvent):void {
            ToolTip.maxWidth = 1300;

            app = new ApplicationImpl();
            app.attachView(this);
            app.getContext().installCommand(new StartupCommand());

            // DEBUG
            // showRedrawRegions(true, 0xFF0000);
        }


        private function functionKeyList_clickHandler(event:MouseEvent):void {
        }
        ]]></fx:Script>
</s:Application>
